<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gxu.informationLibrary.dao.dataManageDao">
    <insert id="insertData">
        insert into ${db_name}.${tb_name}(
        <foreach collection="columns" index="index" item="item" separator=",">
            ${item.col_name}
        </foreach>
        ) values(
        <foreach collection="columns" index="index" item="item" separator=",">
            #{item.value}
        </foreach>
        )
    </insert>
    <update id="updateData">
        <foreach collection="updates" item="item" index="index">
            update ${db_name}.${tb_name} set ${item.col_name}=#{item.value}
            where record_id =#{record_id};
        </foreach>
    </update>
    <delete id="deleteData">
        delete
        from ${db_name}.${tb_name}
        where record_id = #{record_id};
    </delete>
    <select id="queryData" resultType="com.alibaba.fastjson.JSONObject">
        select * from ${db_name}.${tb_name}
        where true
        <foreach collection="columns" item="item" index="index" separator="and" open="and">
            ${item.col_name} like concat('%',#{item.value},'%')
        </foreach>
        <if test="onlyAuth==true">and user=#{user_id}</if>;
    </select>
    <insert id="removeToRecycle">
        insert into recycle_bin(form_id, data, user, del_time)
        values (#{form_id}, #{data}, #{user_id}, NOW())
    </insert>
    <select id="statistics" resultType="map">
        <choose>
            <when test="option=='count'">select count(${field}) as result,${group_field} as col_name
            </when>
            <when test="option=='sum'">select sum(${field}) as result,${group_field} as col_name
            </when>
            <when test="option=='avg'">select avg(${field}) as result,${group_field} as col_name
            </when>
        </choose>
        from ${db_name}.${tb_name}
        <if test="onlyUser==true">
            where user=#{user_id}
        </if>
        group by ${group_field}
        order by ${group_field};
    </select>
    <select id="queryDataById" resultType="com.alibaba.fastjson.JSONObject">
        select *
        from ${db_name}.${tb_name}
        where record_id = #{record_id};
    </select>
    <select id="getTableColumn" resultType="map">
        select col_name as field, label_name as title, '' as value, data_type
        from column_info,
             form_struct
        where form_id = #{form_id}
          and form_struct.col_id = column_info.col_id;
    </select>
    <select id="getTableByFormId" resultType="map">
        select db_name, tb_name
        from tb_info
        where tb_id = (select tb_id from form_info where form_id = #{form_id});
    </select>
    <select id="getDumpList" resultType="com.alibaba.fastjson.JSONObject">
        select file_name, dump_time
        from data_base_dump_info
        where date_format(dump_time, '%Y-%m-%d %H:%i:%s') like concat('%', #{dump_time}, '%')
        order by dump_time desc;
    </select>
    <resultMap id="recycleDataMap" type="com.gxu.informationLibrary.entity.recycleBin">
        <constructor>
            <idArg column="del_id" javaType="int"/>
            <arg column="form_id" javaType="int"/>
            <arg column="data" javaType="string"/>
            <arg column="user" javaType="string"/>
            <arg column="del_time" javaType="string"/>
        </constructor>
    </resultMap>
    <delete id="deleteRecycleData">
        delete
        from recycle_bin
        where del_id = #{del_id};
    </delete>
    <delete id="clearRecycle">
        delete
        from recycle_bin
        where user = #{user_id}
          and form_id = #{form_id};
    </delete>
    <select id="queryRecycleData" resultMap="recycleDataMap">
        select * from recycle_bin
        where user = #{user_id}
        and form_id = #{form_id}
        <foreach collection="queryList" item="item" index="index" open="and">
            json_extract(data,concat('$.',#{item.col_name})) like concat('%',#{item.value},'%')
        </foreach>;
    </select>
</mapper>