<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gxu.informationLibrary.dao.userDao">
    <insert id="addUser">
        insert into user_info(user_id, user_pwd, user_name, user_email, user_role)
        select #{user.user_id}, #{user.user_pwd}, #{user.user_name}, #{user.user_email}, role_id
        from role_info
        where role_name = #{user.user_role};
    </insert>
    <delete id="deleteUser">
        delete
        from user_info
        where user_id = #{user_id};
    </delete>
    <update id="editUser">
        update user_info
        set ${col_name}=#{value}
        where user_id = #{user_id};
    </update>
    <resultMap id="userInfoMap" type="com.gxu.informationLibrary.entity.userInfo">
        <result column="user_id" property="user_id"/>
        <result column="user_pwd" property="user_pwd"/>
        <result column="user_name" property="user_name"/>
        <result column="user_email" property="user_email"/>
        <result column="user_role" property="user_role"/>
    </resultMap>
    <select id="queryUser" resultMap="userInfoMap">
        select user_id, '******' as user_pwd, user_name, user_email, role_name as user_role
        from user_info,
             role_info
        where user_name like concat('%', #{user_name}, '%')
          and user_role = role_info.role_id
          and not is_del = 1;
    </select>
    <select id="checkUser" resultType="map">
        select user_id, user_pwd, user_name, user_email, role_name as user_role, is_del
        from user_info,
             role_info
        where user_id = #{user_id}
          and user_role = role_info.role_id;
    </select>
    <select id="queryEmail" resultType="string">
        select user_email
        from user_info
        where user_id = #{user_id}
    </select>
    <select id="getPwd" resultType="string">
        select user_pwd
        from user_info
        where user_id = #{user_id};
    </select>
    <select id="checkExist" resultType="map">
        select *
        from user_info
        where user_id = #{user_id};
    </select>
    <select id="queryUserById" resultMap="userInfoMap">
        select user_id, '******' as user_pwd, user_name, user_email, role_name as user_role
        from user_info,
             role_info
        where user_id=#{user_id}
          and user_role = role_info.role_id;
    </select>
</mapper>