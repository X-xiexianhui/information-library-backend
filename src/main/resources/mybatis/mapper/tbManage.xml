<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gxu.informationLibrary.dao.tableManagerDao">
    <update id="createTable">
        create table ${db_name}.${tb_name}(
        <foreach item="item" index="index" collection="column">
            ${item.col_name} ${item.data_type}
            <choose>
                <when test="item.data_type=='numeric'">
                    (${item.len},${item.place})
                </when>
                <otherwise>
                    (${item.len})
                </otherwise>
            </choose>
            <if test="item.uni==true">unique</if>
            <if test="item.not_null==true">not null</if>,
        </foreach>
        file varchar(64),
        record_id int auto_increment,
        <if test="pks!=null and pks.size()>0">
            primary key (
            <foreach item="pk" index="index" collection="pks" separator=",">
                ${pk}
            </foreach>
            ),
        </if>
        index (record_id),
        index (file)
        );
        update db_info set tables=tables+1 where db_name=#{db_name};
        insert into tb_info(db_name, tb_name) values (#{db_name},#{tb_name});
        insert into column_info(tb_id, col_name, data_type, len, place, PK, not_null, uni)
        <foreach item="item" collection="column" index="index" separator="union all">
            select tb_id,
            #{item.col_name},#{item.data_type},#{item.len},#{item.place},#{item.PK},#{item.not_null},#{item.uni}
            from tb_info where db_name=#{db_name} and tb_name=#{tb_name}
        </foreach>
    </update>

    <update id="deleteTable">
        drop table ${db_name}.${tb_name};
        update db_info
        set tables=tables - 1
        where db_name = #{db_name};
        delete
        from tb_info
        where tb_name = #{tb_name}
          and db_name = #{db_name};
    </update>

    <select id="searchTable" resultType="table">
        select tb_id, db_name, tb_name
        from tb_info
        where tb_name like concat('%', #{tb_name}, '%')
    </select>

    <update id="renameTable">
        rename table ${db_name}.${tb_name} to ${db_name}.${new_name};
        update tb_info
        set tb_name=#{new_name}
        where db_name = #{db_name}
          and tb_name = #{tb_name};

    </update>

    <select id="getColumn" resultType="com.alibaba.fastjson.JSONObject">
        select col_id,
               tb_id,
               col_name,
               data_type,
               len,
               place,
               PK,
               not_null,
               uni
        from column_info
        where tb_id = (select tb_id
                       from tb_info
                       where tb_name = #{tb_name}
                         and db_name = #{db_name});
    </select>

    <update id="addColumn">
        <foreach collection="insert" item="item" index="index">
            alter table ${item.db_name}.${item.tb_name} add column ${item.col_name} ${item.data_type}
            <choose>
                <when test="item.data_type=='numeric'">
                    (${item.len},${item.place})
                </when>
                <otherwise>
                    (${item.len})
                </otherwise>
            </choose>
            <if test="item.uni==true">unique</if>
            <if test="item.not_null==true">not null</if>;
        </foreach>
        insert into column_info(tb_id, col_name, data_type, len, place, PK, not_null, uni)
        <foreach item="item" collection="insert" index="index" separator="union all">
            select tb_id,
            #{item.col_name},#{item.data_type},#{item.len},#{item.place},#{item.PK},#{item.not_null},#{item.uni}
            from tb_info where db_name=#{item.db_name} and tb_name=#{item.tb_name}
        </foreach>
    </update>

    <update id="dropColumn">
        alter table ${db_name}.${tb_name}
            drop column ${col_name};
        delete
        from column_info
        where col_name = #{col_name};
    </update>

    <update id="changeColumn">
        alter table ${db_name}.${tb_name}
            change ${col_name} ${new_column} ${data_type}(${len},${place});
    </update>

    <update id="addUnique">
        alter table ${db_name}.${tb_name}
            add unique (${col_name});
    </update>

    <update id="dropUnique">
        alter table ${db_name}.${tb_name}
            drop index ${key_name};
    </update>

    <update id="setNotNull">
        alter table ${db_name}.${tb_name} modify ${col_name} <if test="not_null=='true'">not</if> null;
    </update>

    <update id="dropPK">
        alter table ${db_name}.${tb_name}
            drop primary key;
    </update>

    <update id="addPK">
        alter table ${db_name}.${tb_name} add primary key (
        <foreach item="pk" index="index" collection="pks" separator=",">
            ${pk}
        </foreach>
        );
    </update>

    <select id="showKeys" resultType="com.alibaba.fastjson.JSONObject">
        show keys from ${db_name}.${tb_name} where Column_name = #{col_name} and Non_unique = 0;
    </select>

    <select id="query">
        select ${query_col}
        from column_info
        where ${col_name} = #{query_value};
    </select>

    <update id="setColumnInfo">
        update column_info
        set ${col_name} = #{new_value}
        where tb_id = #{col_id};
    </update>
</mapper>