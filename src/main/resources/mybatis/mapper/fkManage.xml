<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gxu.informationLibrary.dao.fkManagerDao">
    <select id="getRefTable" resultType="String">
        select concat(db_name, '.', tb_name) as ref_table
        from tb_info where not (db_name=#{db_name} and tb_name=#{tb_name});
    </select>
    <select id="getRefColumn" resultType="String">
        select col_name
        from column_info
        where tb_id = (select tb_id from tb_info where concat(db_name, '.', tb_name) = #{ref_table})
          and (PK = true or uni = true);
    </select>
    <update id="createFK">
        alter table ${db_name}.${tb_name}
            add constraint ${fk_name} foreign key (${fk_column}) references ${ref_db}.${ref_table}(${ref_column});
    </update>
    <insert id="insertFkInfo">
        insert into fk_info
        values (#{fk_table},#{fk_column},#{fk_name}, #{ref_table}, #{ref_column});
    </insert>
    <update id="deleteFk">
        alter table ${db_name}.${tb_name}
            drop foreign key ${fk_name};
    </update>
    <delete id="deleteFkInfo">
        delete
        from fk_info
        where fk_table = #{fk_table}
          and fk_column = #{fk_column};
    </delete>
    <select id="queryTable" resultType="int">
        select tb_id
        from tb_info
        where db_name=#{ref_db} and tb_name=#{ref_table};
    </select>
    <select id="getFk" resultType="com.gxu.informationLibrary.entity.fk">
        select fk_name, fk_column, concat(db_name, '.', tb_name) as ref_table, ref_column
        from fk_info,
             tb_info
        where fk_info.fk_table = (select tb_id from tb_info where db_name = #{db_name} and tb_name = #{tb_name});
    </select>
    <select id="getFkColumn" resultType="String">
        select col_name
        from column_info
        where tb_id = (select tb_id from tb_info where db_name = #{db_name} and tb_name = #{tb_name});
    </select>
</mapper>